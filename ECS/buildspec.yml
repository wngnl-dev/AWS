version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "654654489681"
    AWS_DEFAULT_REGION: "ap-northeast-2"
    IMAGE_REPO_NAME: "wsi-ecr"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo $REPOSITORY_URI
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - wget https://wsc2024-s3-jis.s3.ap-northeast-2.amazonaws.com/Dockerfile
      - docker build -t $IMAGE_REPO_NAME .
      - echo Converting build ID for Docker tag...
      - UNIQUE_BUILD_ID=$(echo $CODEBUILD_BUILD_ID | cut -d ':' -f 2)
      - echo Tagging the Docker image with the valid tag...
      - docker tag $IMAGE_REPO_NAME:latest $REPOSITORY_URI:$UNIQUE_BUILD_ID
  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push $REPOSITORY_URI:$UNIQUE_BUILD_ID
      - echo Build completed on `date`
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION > commit_id.txt
      - echo Updating taskdef.json with the new image URI...
      - jq --arg imageUri "$REPOSITORY_URI:$UNIQUE_BUILD_ID" '.containerDefinitions[0].image = $imageUri' taskdef.json > updated-taskdef.json
      - mv updated-taskdef.json taskdef.json
artifacts:
  files:
    - 'taskdef.json'
    - 'appspec.yml'
    - 'commit_id.txt'
